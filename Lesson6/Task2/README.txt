Допустим, у вас есть файл с исходным кодом программы sha1-benchmark.cpp. Вы можете использовать следующие команды для компиляции и измерения времени выполнения с разными уровнями оптимизации:

    Сначала скомпилируйте программу без оптимизации:



g++ sha1_benchmark.cc sha1.cc -o sha1-with-opt

    Затем выполните программу с помощью команды time:



time ./sha1-benchmark-no-opt

    После выполнения программы вы увидите статистику времени выполнения, включая общее время (real time), пользовательское время (user time) и системное время (sys time).

    Теперь скомпилируйте программу с максимальной оптимизацией (например, -O3):



g++ -O3 sha1_benchmark.cc sha1.cc -o sha1-with-opt

    Запустите программу с максимальной оптимизацией и измерьте время выполнения:



time ./sha1-with-opt
time ./sha1-without-opt
Сравните результаты времени выполнения между версиями программы с и без оптимизации. Оптимизация может значительно повлиять на производительность программы, и вы сможете увидеть разницу во времени выполнения между ними.
